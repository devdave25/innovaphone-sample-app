<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>innovaphone SDK - PbxApi protocol</title>
    <link rel="stylesheet" href="../../web1/doc/innovaphone.doc.css" type="text/css" />
    <link rel="stylesheet" href="../../web1/doc/vs.css">
    <script src="../../web1/doc/highlight.pack.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
</head>

<body>
    <h1>PbxApi</h1>

    <p>
        The PbxApi protocol is available on AppWebsocket connections to innovaphone PBX objects, if
        the object is enabled for the PbxApi. It allows access to the presence, favourties and node information.
	</p>

    <a name="General structure"></a><h2>General structure</h2>

	<pre><code class="json">{
    "api": "PbxApi",
    "src": string,
    "mt": string,
}</code></pre><br/>

    <dl>
        <dt>api</dt>
        <dd>
            To address this interface the value "PbxApi" has tp be used for the api property
        </dd>
        <dt>src</dt>
        <dd>
            The AppWebsocket src mechanism is supported on the interface. So a src
            property may be used
        </dd>
        <dt>mt</dt>
        <dd>
            The message type identifies the requested operation
        </dd>
    </dl>

    <p>
        In general operatios are performed by sending a message with a message type &lt;name&gt; to the
        PBX. The result is retured with a message with message type &lt;name&gt;Result. Some operations
        turn on monitoring and cause additional update messages sent by the PBX.
    </p>

	<u>Operations</u>

	<ul>
		<li><a href="#SubscribePresence">SubscribePresence</a> - start monitoring the presence of a PBX object</li>
		<li><a href="#UnsubscribePresence">UnsubscribePresence</a> - stop monitoring the presence of a PBX object</li>
		<li><a href="#SetPresence">SetPresence</a> - sets the presence of a PBX object</li>
		<li><a href="#SubscribeProfile">SubscribeProfile</a> - start monitoring the profiles / favourites of a PBX object</li>
		<li><a href="#UnsubscribeProfile">UnsubscribeProfile</a> - stop monitoring the profiles / favourites of a PBX object</li>
		<li><a href="#AddProfileContact">AddProfileContact</a>  - add a favourite to a profile of a PBX object</li>
		<li><a href="#DelProfileContact">DelProfileContact</a> - delete a favourite from a profile of a PBX object</li>
		<li><a href="#UpdateProfileContact">UpdateProfileContact</a> - change a favourite in the profile of a PBX object</li>
		<li><a href="#GetNodeInfo">GetNodeInfo</a> - Retrieves information about a PBX node</li>
	</ul>

    <div><a href="#Objects">Objects</a> - recurring definitions</div>

	<h2><a name="SubscribePresence"></a>SubscribePresence</h2>
	<pre><code class="json">{
    "api": "PbxApi",
    "mt": "SubscribePresence",
    "sip": string,
    "num": string
}</code></pre>
    <p>
        Start monitoring of the presence of the object defined by <code>sip</code> or <code>num</code>.
    </p>
	<pre><code class="json">{
    "api": "PbxApi",
    "mt": "SubscribePresenceResult"
}</code></pre>
    <p>
        Message sent back to confirm start of the monitoring
    </p>
	<pre><code class="json">{
    "api": "PbxApi",
    "mt": "PresenceState"
    "up": boolean
    "sip": string,
    "num": string,
    "dn": string,
    "email": string
}</code></pre>
    <p>
        Message sent back whenever the state of the presence monitoring has changed. It also includes the full endpoint info that was retrieved with the subscription.
    </p>
    <dl>
        <dt>up</dt>
        <dd>
            True if the presence monitor is connected. False if it is disconnected.
        </dd>
        <dt>sip</dt>
        <dd>
            The SIP URI of the monitored user.
        </dd>
        <dt>num</dt>
        <dd>
            The phone number of the monitored user.
        </dd>
        <dt>dn</dt>
        <dd>
            The display name of the monitored user.
        </dd>
        <dt>email</dt>
        <dd>
            The email address of the monitored user.
        </dd>
    </dl>
    <br />
	<pre><code class="json">{
    "api": "PbxApi",
    "mt": "PresenceUpdate",
    "presence": [<a href="#presence">presence</a>]
}</code></pre>
    <p>
        Sent after the presence monitor is up and whenever the presence of the monitored user changes afterwards.
        The presence array
    </p>
    <dl>
        <dt>presence</dt>
        <dd>
            An array containing presence items. The first item is the newest item and should be used for displaying the current presence.
        </dd>
    </dl>
    <br />

    <h2><a name="UnsubscribePresence"></a>UnsubscribePresence</h2>
    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "UnsubscribePresence",
    "sip": string,
    "num": string
}</code></pre>
    <p>
        Stop monitoring of the presence of the object defined by <code>sip</code> or <code>num</code>.
    </p>
    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "UnsubscribePresenceResult"
}</code></pre>
    <p>
        Message sent back to confirm that the monitoring has been stopped.
    </p>

    <h2><a name="SetPresence"></a>SetPresence</h2>
    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "SetPresence",
    "sip": string,
    "guid": string,
    "contact": string,
    "activity": string,
    "note": string
}</code></pre>
    <p>
        Sets the presence for a given contact of a user, defined by the SIP URI or GUID.
    </p>
    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "SetPresenceResult",
    "error": unsigned,
    "errorText": string
}</code></pre>
    <p>
        Message sent back to confirm that setting the presence has been completed or failed.
    </p>


    <h2><a name="SubscribeProfile"></a>SubscribeProfile</h2>
    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "SubscribeProfile"
}</code></pre>
    <p>
        Starts monitoring the first profile of the user that established the AppWebsocket connection.
    </p>
    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "SubscribeProfileResult",
    "profile": profile
}</code></pre>
    <p>
        Confirmation that the monitor has been set up. Also this message contains the initial value of the first profile.
    </p>

    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "ProfileContactAdded",
    "profile": {
        "id": unsigned,
        "contact": contact
    }
}</code></pre>
    <p>
        This message is sent when a new favourite has been added to the first profile.
    </p>

    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "ProfileContactDeleted",
    "profile": {
        "id": unsigned,
        "contact": {
            "id": unsigned
        }
    }
}</code></pre>
    <p>
        This message is sent when a favourite has been deleted from the first profile.
    </p>


    <h2><a name="UnsubscribeProfile"></a>UnsubscribeProfile</h2>
    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "UnsubscribeProfile"
}</code></pre>
    <p>
        Stops monitoring the users profile.
    </p>
    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "UnsubscribeProfileResult"
}</code></pre>
    <p>
        Confirmation that the monitor has been deleted.
    </p>

    <h2><a name="AddProfileContact"></a>AddProfileContact</h2>
    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "AddProfileContact",
    "id": unsigned,
    "name": string,
    "contact": {
        "dn": string,
        "sip": string,
        "num": string
    }
}</code></pre>
    <p>
        Adds a new favourite to the given profile.
        If the profile does not exist, it is created.
    </p>

    <h2><a name="DelProfileContact"></a>DelProfileContact</h2>
    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "DelProfileContact",
    "id": unsigned,
    "contact": {
        "id": unsigned
    }
}</code></pre>
    <p>
        Deletes a favourite from the given profile.
    </p>

    <h2><a name="UpdateProfileContact"></a>UpdateProfileContact</h2>
    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "UpdateProfileContact",
    "id": unsigned,
    "contact": contact
}</code></pre>
    <p>
        Updates an existing favourite.
    </p>

    <h2><a name="GetNodeInfo"></a>GetNodeInfo</h2>
    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "GetNodeInfo"
}</code></pre>
    <p>
        Requests information about the node of the user that is authenticated on the underlying AppWebsocket connection.
    </p>

    <pre><code class="json">{
    "api": "PbxApi",
    "mt": "GetNodeInfoResult",
    "name": string,
    "prefix_intl": string,
    "prefix_ntl": string,
    "prefix_subs": string,
    "country_code": string
}</code></pre>
    <p>
        Contains information about the node of the user that is authenticated on the underlying AppWebsocket connection.
    </p>
    <dl>
        <dt>name</dt>
        <dd>
            Name of the node.
        </dd>
        <dt>prefix_intl</dt>
        <dd>
            Prefix for dialing international numbers.
        </dd>
        <dt>prefix_ntl</dt>
        <dd>
            Prefix for dialing national numbers.
        </dd>
        <dt>prefix_subs</dt>
        <dd>
            Subscriber number prefix.
        </dd>
        <dt>country_code</dt>
        <dd>
            Country code.
        </dd>
    </dl>
    <br />

	
	<h2><a name="Objects"></a>Objects</h2>
    <a name="presence"></a><div class="fnhead">presence</div>
    <pre><code class="json">{
    "contact": string,
    "status": string,
    "activity": string,
    "note": string
}</code></pre>
    <dl>
        <dt>contact</dt>
        <dd>
            A string defining the type of the presence. Typical values are:
            <dl>
                <dt>tel:</dt>
                <dd>The presence set by the user.</dd>
                <dt>im:</dt>
                <dd>Automatically created by the PBX. The status attribute contains the online state of the user.</dd>
                <dt>calendar:</dt>
                <dd>Automatically created by a calendar app like the innovaphone Calendar.</dd>
            </dl>
        </dd>
        <dt>status</dt>
        <dd>
            Tells if the user can be contacted using the given contact. Possible values are "open", "closed". 
        </dd>
        <dt>activity</dt>
        <dd>
            The presence activity. Typical values are "" for available, "away", "busy" and "dnd" for do not disturb.
        </dd>
        <dt>note</dt>
        <dd>
            A free text entered by the user giving additional information about the presence.
        </dd>
    </dl>

    <a name="profile"></a><div class="fnhead">profile</div>
    <pre><code class="json">{
    "id": integer,
    "name": string,
    "contacts": [contact]
}</code></pre>
    <dl>
        <dt>id</dt>
        <dd>
            The nummerical id of the profile
        </dd>
        <dt>name</dt>
        <dd>
            The title of the profile
        </dd>
    </dl>

    <a name="contact"></a><div class="fnhead">contact</div>
    <pre><code class="json">{
    "id": integer,
    "name": string,
    "num": string,
    "dsp": string,
    "presence": boolean,
    "dialog": boolean,
    "ext": string
}</code></pre>
    <dl>
        <dt>id</dt>
        <dd>
            The nummerical id of the favourite
        </dd>
        <dt>name</dt>
        <dd>
            The SIP URI of the favourite
        </dd>
        <dt>num</dt>
        <dd>
            The phone number of the favourite
        </dd>
        <dt>dsp</dt>
        <dd>
            The display name of the favourite
        </dd>
        <dt>presence</dt>
        <dd>
            Tells if presence monitoring is available
        </dd>
        <dt>dialog</dt>
        <dd>
            Tells if dialog monitoring is available
        </dd>
        <dt>ext</dt>
        <dd>
            Obsolete. Tells the type of the favourite. Was used in myPBX to define the handling of the favourite.
            <dl>
                <dt>undefined</dt>
                <dd>Internal user.</dd>
                <dt>tel</dt>
                <dd>External phone number</dd>
                <dt>sip</dt>
                <dd>External SIP URI</dd>
            </dl>
        </dd>
    </dl>
</body>
</html>
